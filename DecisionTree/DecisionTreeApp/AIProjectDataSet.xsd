<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="AIProjectDataSet" targetNamespace="http://tempuri.org/AIProjectDataSet.xsd" xmlns:mstns="http://tempuri.org/AIProjectDataSet.xsd" xmlns="http://tempuri.org/AIProjectDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="AIProjectConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="AIProjectConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.AIDT.DecisionTreeApp.Properties.Settings.GlobalReference.Default.AIProjectConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ClassArrangementTableAdapter" GeneratorDataComponentClassName="ClassArrangementTableAdapter" Name="ClassArrangement" UserDataComponentName="ClassArrangementTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="AIProjectConnectionString (Settings)" DbObjectName="AIProject.dbo.ClassArrangement" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[ClassArrangement] WHERE (([CustomerId] = @Original_CustomerId) AND ([ClassId] = @Original_ClassId) AND ([CreateDate] = @Original_CreateDate))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CustomerId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CustomerId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ClassId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ClassId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_CreateDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="CreateDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[ClassArrangement] ([CustomerId], [ClassId], [CreateDate]) VALUES (@CustomerId, @ClassId, @CreateDate);
SELECT CustomerId, ClassId, CreateDate FROM ClassArrangement WHERE (ClassId = @ClassId) AND (CreateDate = @CreateDate) AND (CustomerId = @CustomerId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CustomerId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CustomerId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ClassId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ClassId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@CreateDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="CreateDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT CustomerId, ClassId, CreateDate FROM dbo.ClassArrangement</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[ClassArrangement] SET [CustomerId] = @CustomerId, [ClassId] = @ClassId, [CreateDate] = @CreateDate WHERE (([CustomerId] = @Original_CustomerId) AND ([ClassId] = @Original_ClassId) AND ([CreateDate] = @Original_CreateDate));
SELECT CustomerId, ClassId, CreateDate FROM ClassArrangement WHERE (ClassId = @ClassId) AND (CreateDate = @CreateDate) AND (CustomerId = @CustomerId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CustomerId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CustomerId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ClassId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ClassId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@CreateDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="CreateDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CustomerId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CustomerId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ClassId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ClassId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_CreateDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="CreateDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="CustomerId" DataSetColumn="CustomerId" />
              <Mapping SourceColumn="ClassId" DataSetColumn="ClassId" />
              <Mapping SourceColumn="CreateDate" DataSetColumn="CreateDate" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ClassDetailsTableAdapter" GeneratorDataComponentClassName="ClassDetailsTableAdapter" Name="ClassDetails" UserDataComponentName="ClassDetailsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="AIProjectConnectionString (Settings)" DbObjectName="AIProject.dbo.ClassDetails" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[ClassDetails] WHERE (([ClassId] = @Original_ClassId) AND ((@IsNull_ClassName = 1 AND [ClassName] IS NULL) OR ([ClassName] = @Original_ClassName)) AND ((@IsNull_ClassTime = 1 AND [ClassTime] IS NULL) OR ([ClassTime] = @Original_ClassTime)) AND ((@IsNull_CourseId = 1 AND [CourseId] IS NULL) OR ([CourseId] = @Original_CourseId)) AND ((@IsNull_TeacherId = 1 AND [TeacherId] IS NULL) OR ([TeacherId] = @Original_TeacherId)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ClassId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ClassId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_ClassName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ClassName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ClassName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ClassName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_ClassTime" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ClassTime" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ClassTime" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ClassTime" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_CourseId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CourseId" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CourseId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CourseId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_TeacherId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeacherId" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TeacherId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeacherId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[ClassDetails] ([ClassName], [ClassTime], [CourseId], [TeacherId]) VALUES (@ClassName, @ClassTime, @CourseId, @TeacherId);
SELECT ClassId, ClassName, ClassTime, CourseId, TeacherId FROM ClassDetails WHERE (ClassId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ClassName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ClassName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ClassTime" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ClassTime" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CourseId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CourseId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TeacherId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeacherId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ClassId, ClassName, ClassTime, CourseId, TeacherId FROM dbo.ClassDetails</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[ClassDetails] SET [ClassName] = @ClassName, [ClassTime] = @ClassTime, [CourseId] = @CourseId, [TeacherId] = @TeacherId WHERE (([ClassId] = @Original_ClassId) AND ((@IsNull_ClassName = 1 AND [ClassName] IS NULL) OR ([ClassName] = @Original_ClassName)) AND ((@IsNull_ClassTime = 1 AND [ClassTime] IS NULL) OR ([ClassTime] = @Original_ClassTime)) AND ((@IsNull_CourseId = 1 AND [CourseId] IS NULL) OR ([CourseId] = @Original_CourseId)) AND ((@IsNull_TeacherId = 1 AND [TeacherId] IS NULL) OR ([TeacherId] = @Original_TeacherId)));
SELECT ClassId, ClassName, ClassTime, CourseId, TeacherId FROM ClassDetails WHERE (ClassId = @ClassId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ClassName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ClassName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ClassTime" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ClassTime" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CourseId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CourseId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TeacherId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeacherId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ClassId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ClassId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_ClassName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ClassName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ClassName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ClassName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_ClassTime" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ClassTime" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ClassTime" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ClassTime" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_CourseId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CourseId" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CourseId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CourseId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_TeacherId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeacherId" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TeacherId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeacherId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ClassId" ColumnName="ClassId" DataSourceName="AIProject.dbo.ClassDetails" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ClassId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ClassId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ClassId" DataSetColumn="ClassId" />
              <Mapping SourceColumn="ClassName" DataSetColumn="ClassName" />
              <Mapping SourceColumn="ClassTime" DataSetColumn="ClassTime" />
              <Mapping SourceColumn="CourseId" DataSetColumn="CourseId" />
              <Mapping SourceColumn="TeacherId" DataSetColumn="TeacherId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ClassTimeTableAdapter" GeneratorDataComponentClassName="ClassTimeTableAdapter" Name="ClassTime" UserDataComponentName="ClassTimeTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="AIProjectConnectionString (Settings)" DbObjectName="AIProject.dbo.ClassTime" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[ClassTime] WHERE (([ClassTimeId] = @Original_ClassTimeId) AND ((@IsNull_TimeName = 1 AND [TimeName] IS NULL) OR ([TimeName] = @Original_TimeName)) AND ((@IsNull_Note = 1 AND [Note] IS NULL) OR ([Note] = @Original_Note)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ClassTimeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ClassTimeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_TimeName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TimeName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_TimeName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TimeName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Note" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Note" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Note" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Note" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[ClassTime] ([TimeName], [Note]) VALUES (@TimeName, @Note);
SELECT ClassTimeId, TimeName, Note FROM ClassTime WHERE (ClassTimeId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@TimeName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TimeName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Note" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Note" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ClassTimeId, TimeName, Note FROM dbo.ClassTime</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[ClassTime] SET [TimeName] = @TimeName, [Note] = @Note WHERE (([ClassTimeId] = @Original_ClassTimeId) AND ((@IsNull_TimeName = 1 AND [TimeName] IS NULL) OR ([TimeName] = @Original_TimeName)) AND ((@IsNull_Note = 1 AND [Note] IS NULL) OR ([Note] = @Original_Note)));
SELECT ClassTimeId, TimeName, Note FROM ClassTime WHERE (ClassTimeId = @ClassTimeId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@TimeName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TimeName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Note" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Note" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ClassTimeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ClassTimeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_TimeName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TimeName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_TimeName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TimeName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Note" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Note" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Note" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Note" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ClassTimeId" ColumnName="ClassTimeId" DataSourceName="AIProject.dbo.ClassTime" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ClassTimeId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ClassTimeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ClassTimeId" DataSetColumn="ClassTimeId" />
              <Mapping SourceColumn="TimeName" DataSetColumn="TimeName" />
              <Mapping SourceColumn="Note" DataSetColumn="Note" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CourseCertificateTableAdapter" GeneratorDataComponentClassName="CourseCertificateTableAdapter" Name="CourseCertificate" UserDataComponentName="CourseCertificateTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="AIProjectConnectionString (Settings)" DbObjectName="AIProject.dbo.CourseCertificate" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[CourseCertificate] WHERE (([CertificateId] = @Original_CertificateId) AND ((@IsNull_CertificateName = 1 AND [CertificateName] IS NULL) OR ([CertificateName] = @Original_CertificateName)) AND ((@IsNull_Description = 1 AND [Description] IS NULL) OR ([Description] = @Original_Description)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CertificateId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CertificateId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_CertificateName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CertificateName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_CertificateName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CertificateName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Description" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[CourseCertificate] ([CertificateName], [Description]) VALUES (@CertificateName, @Description);
SELECT CertificateId, CertificateName, Description FROM CourseCertificate WHERE (CertificateId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@CertificateName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CertificateName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT CertificateId, CertificateName, Description FROM dbo.CourseCertificate</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[CourseCertificate] SET [CertificateName] = @CertificateName, [Description] = @Description WHERE (([CertificateId] = @Original_CertificateId) AND ((@IsNull_CertificateName = 1 AND [CertificateName] IS NULL) OR ([CertificateName] = @Original_CertificateName)) AND ((@IsNull_Description = 1 AND [Description] IS NULL) OR ([Description] = @Original_Description)));
SELECT CertificateId, CertificateName, Description FROM CourseCertificate WHERE (CertificateId = @CertificateId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@CertificateName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CertificateName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CertificateId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CertificateId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_CertificateName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CertificateName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_CertificateName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CertificateName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Description" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="CertificateId" ColumnName="CertificateId" DataSourceName="AIProject.dbo.CourseCertificate" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@CertificateId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="CertificateId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="CertificateId" DataSetColumn="CertificateId" />
              <Mapping SourceColumn="CertificateName" DataSetColumn="CertificateName" />
              <Mapping SourceColumn="Description" DataSetColumn="Description" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CourseDetailsTableAdapter" GeneratorDataComponentClassName="CourseDetailsTableAdapter" Name="CourseDetails" UserDataComponentName="CourseDetailsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="AIProjectConnectionString (Settings)" DbObjectName="AIProject.dbo.CourseDetails" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[CourseDetails] WHERE (([CourseId] = @Original_CourseId) AND ((@IsNull_CourseName = 1 AND [CourseName] IS NULL) OR ([CourseName] = @Original_CourseName)) AND ((@IsNull_CourseCertificate = 1 AND [CourseCertificate] IS NULL) OR ([CourseCertificate] = @Original_CourseCertificate)) AND ((@IsNull_CourseFee = 1 AND [CourseFee] IS NULL) OR ([CourseFee] = @Original_CourseFee)) AND ((@IsNull_CourseGroup = 1 AND [CourseGroup] IS NULL) OR ([CourseGroup] = @Original_CourseGroup)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CourseId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CourseId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_CourseName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CourseName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_CourseName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CourseName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_CourseCertificate" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CourseCertificate" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CourseCertificate" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CourseCertificate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_CourseFee" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CourseFee" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_CourseFee" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="CourseFee" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_CourseGroup" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CourseGroup" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CourseGroup" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CourseGroup" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[CourseDetails] ([CourseName], [CourseCertificate], [CourseFee], [CourseGroup]) VALUES (@CourseName, @CourseCertificate, @CourseFee, @CourseGroup);
SELECT CourseId, CourseName, CourseCertificate, CourseFee, CourseGroup FROM CourseDetails WHERE (CourseId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@CourseName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CourseName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CourseCertificate" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CourseCertificate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@CourseFee" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="CourseFee" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CourseGroup" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CourseGroup" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT CourseId, CourseName, CourseCertificate, CourseFee, CourseGroup FROM dbo.CourseDetails</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[CourseDetails] SET [CourseName] = @CourseName, [CourseCertificate] = @CourseCertificate, [CourseFee] = @CourseFee, [CourseGroup] = @CourseGroup WHERE (([CourseId] = @Original_CourseId) AND ((@IsNull_CourseName = 1 AND [CourseName] IS NULL) OR ([CourseName] = @Original_CourseName)) AND ((@IsNull_CourseCertificate = 1 AND [CourseCertificate] IS NULL) OR ([CourseCertificate] = @Original_CourseCertificate)) AND ((@IsNull_CourseFee = 1 AND [CourseFee] IS NULL) OR ([CourseFee] = @Original_CourseFee)) AND ((@IsNull_CourseGroup = 1 AND [CourseGroup] IS NULL) OR ([CourseGroup] = @Original_CourseGroup)));
SELECT CourseId, CourseName, CourseCertificate, CourseFee, CourseGroup FROM CourseDetails WHERE (CourseId = @CourseId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@CourseName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CourseName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CourseCertificate" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CourseCertificate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@CourseFee" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="CourseFee" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CourseGroup" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CourseGroup" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CourseId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CourseId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_CourseName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CourseName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_CourseName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CourseName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_CourseCertificate" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CourseCertificate" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CourseCertificate" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CourseCertificate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_CourseFee" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CourseFee" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_CourseFee" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="CourseFee" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_CourseGroup" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CourseGroup" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CourseGroup" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CourseGroup" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="CourseId" ColumnName="CourseId" DataSourceName="AIProject.dbo.CourseDetails" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@CourseId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="CourseId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="CourseId" DataSetColumn="CourseId" />
              <Mapping SourceColumn="CourseName" DataSetColumn="CourseName" />
              <Mapping SourceColumn="CourseCertificate" DataSetColumn="CourseCertificate" />
              <Mapping SourceColumn="CourseFee" DataSetColumn="CourseFee" />
              <Mapping SourceColumn="CourseGroup" DataSetColumn="CourseGroup" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CourseGroupTableAdapter" GeneratorDataComponentClassName="CourseGroupTableAdapter" Name="CourseGroup" UserDataComponentName="CourseGroupTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="AIProjectConnectionString (Settings)" DbObjectName="AIProject.dbo.CourseGroup" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[CourseGroup] WHERE (([CourseGroupId] = @Original_CourseGroupId) AND ((@IsNull_Name = 1 AND [Name] IS NULL) OR ([Name] = @Original_Name)) AND ((@IsNull_Note = 1 AND [Note] IS NULL) OR ([Note] = @Original_Note)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CourseGroupId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CourseGroupId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Name" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Note" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Note" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Note" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Note" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[CourseGroup] ([Name], [Note]) VALUES (@Name, @Note);
SELECT CourseGroupId, Name, Note FROM CourseGroup WHERE (CourseGroupId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Note" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Note" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT CourseGroupId, Name, Note FROM dbo.CourseGroup</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[CourseGroup] SET [Name] = @Name, [Note] = @Note WHERE (([CourseGroupId] = @Original_CourseGroupId) AND ((@IsNull_Name = 1 AND [Name] IS NULL) OR ([Name] = @Original_Name)) AND ((@IsNull_Note = 1 AND [Note] IS NULL) OR ([Note] = @Original_Note)));
SELECT CourseGroupId, Name, Note FROM CourseGroup WHERE (CourseGroupId = @CourseGroupId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Note" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Note" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CourseGroupId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CourseGroupId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Name" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Note" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Note" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Note" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Note" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="CourseGroupId" ColumnName="CourseGroupId" DataSourceName="AIProject.dbo.CourseGroup" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@CourseGroupId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="CourseGroupId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="CourseGroupId" DataSetColumn="CourseGroupId" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="Note" DataSetColumn="Note" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CustomerDetailsTableAdapter" GeneratorDataComponentClassName="CustomerDetailsTableAdapter" Name="CustomerDetails" UserDataComponentName="CustomerDetailsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="AIProjectConnectionString (Settings)" DbObjectName="AIProject.dbo.CustomerDetails" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[CustomerDetails] WHERE (([CustomerId] = @Original_CustomerId) AND ((@IsNull_Name = 1 AND [Name] IS NULL) OR ([Name] = @Original_Name)) AND ((@IsNull_Birthday = 1 AND [Birthday] IS NULL) OR ([Birthday] = @Original_Birthday)) AND ((@IsNull_OccupationTypeId = 1 AND [OccupationTypeId] IS NULL) OR ([OccupationTypeId] = @Original_OccupationTypeId)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CustomerId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CustomerId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Name" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Birthday" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Birthday" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_Birthday" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Birthday" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_OccupationTypeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="OccupationTypeId" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_OccupationTypeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="OccupationTypeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[CustomerDetails] ([Name], [Birthday], [OccupationTypeId]) VALUES (@Name, @Birthday, @OccupationTypeId);
SELECT CustomerId, Name, Birthday, OccupationTypeId FROM CustomerDetails WHERE (CustomerId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Birthday" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Birthday" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@OccupationTypeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="OccupationTypeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT CustomerId, Name, Birthday, OccupationTypeId FROM dbo.CustomerDetails</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[CustomerDetails] SET [Name] = @Name, [Birthday] = @Birthday, [OccupationTypeId] = @OccupationTypeId WHERE (([CustomerId] = @Original_CustomerId) AND ((@IsNull_Name = 1 AND [Name] IS NULL) OR ([Name] = @Original_Name)) AND ((@IsNull_Birthday = 1 AND [Birthday] IS NULL) OR ([Birthday] = @Original_Birthday)) AND ((@IsNull_OccupationTypeId = 1 AND [OccupationTypeId] IS NULL) OR ([OccupationTypeId] = @Original_OccupationTypeId)));
SELECT CustomerId, Name, Birthday, OccupationTypeId FROM CustomerDetails WHERE (CustomerId = @CustomerId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Birthday" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Birthday" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@OccupationTypeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="OccupationTypeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CustomerId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CustomerId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Name" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Birthday" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Birthday" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_Birthday" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Birthday" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_OccupationTypeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="OccupationTypeId" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_OccupationTypeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="OccupationTypeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="CustomerId" ColumnName="CustomerId" DataSourceName="AIProject.dbo.CustomerDetails" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@CustomerId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="CustomerId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="CustomerId" DataSetColumn="CustomerId" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="Birthday" DataSetColumn="Birthday" />
              <Mapping SourceColumn="OccupationTypeId" DataSetColumn="OccupationTypeId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="OccupationTypeTableAdapter" GeneratorDataComponentClassName="OccupationTypeTableAdapter" Name="OccupationType" UserDataComponentName="OccupationTypeTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="AIProjectConnectionString (Settings)" DbObjectName="AIProject.dbo.OccupationType" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[OccupationType] WHERE (([OccupationTypeId] = @Original_OccupationTypeId) AND ((@IsNull_OccupationName = 1 AND [OccupationName] IS NULL) OR ([OccupationName] = @Original_OccupationName)) AND ((@IsNull_Note = 1 AND [Note] IS NULL) OR ([Note] = @Original_Note)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_OccupationTypeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="OccupationTypeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_OccupationName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="OccupationName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_OccupationName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="OccupationName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Note" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Note" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Note" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Note" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[OccupationType] ([OccupationName], [Note]) VALUES (@OccupationName, @Note);
SELECT OccupationTypeId, OccupationName, Note FROM OccupationType WHERE (OccupationTypeId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@OccupationName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="OccupationName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Note" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Note" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT OccupationTypeId, OccupationName, Note FROM dbo.OccupationType</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[OccupationType] SET [OccupationName] = @OccupationName, [Note] = @Note WHERE (([OccupationTypeId] = @Original_OccupationTypeId) AND ((@IsNull_OccupationName = 1 AND [OccupationName] IS NULL) OR ([OccupationName] = @Original_OccupationName)) AND ((@IsNull_Note = 1 AND [Note] IS NULL) OR ([Note] = @Original_Note)));
SELECT OccupationTypeId, OccupationName, Note FROM OccupationType WHERE (OccupationTypeId = @OccupationTypeId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@OccupationName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="OccupationName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Note" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Note" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_OccupationTypeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="OccupationTypeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_OccupationName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="OccupationName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_OccupationName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="OccupationName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Note" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Note" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Note" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Note" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="OccupationTypeId" ColumnName="OccupationTypeId" DataSourceName="AIProject.dbo.OccupationType" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@OccupationTypeId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="OccupationTypeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="OccupationTypeId" DataSetColumn="OccupationTypeId" />
              <Mapping SourceColumn="OccupationName" DataSetColumn="OccupationName" />
              <Mapping SourceColumn="Note" DataSetColumn="Note" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TeacherDetailsTableAdapter" GeneratorDataComponentClassName="TeacherDetailsTableAdapter" Name="TeacherDetails" UserDataComponentName="TeacherDetailsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="AIProjectConnectionString (Settings)" DbObjectName="AIProject.dbo.TeacherDetails" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[TeacherDetails] WHERE (([TeacherId] = @Original_TeacherId) AND ((@IsNull_TeacherName = 1 AND [TeacherName] IS NULL) OR ([TeacherName] = @Original_TeacherName)) AND ((@IsNull_TeacherCertificate = 1 AND [TeacherCertificate] IS NULL) OR ([TeacherCertificate] = @Original_TeacherCertificate)) AND ((@IsNull_Note = 1 AND [Note] IS NULL) OR ([Note] = @Original_Note)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TeacherId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeacherId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_TeacherName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeacherName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_TeacherName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TeacherName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_TeacherCertificate" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeacherCertificate" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TeacherCertificate" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeacherCertificate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Note" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Note" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Note" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Note" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[TeacherDetails] ([TeacherName], [TeacherCertificate], [Note]) VALUES (@TeacherName, @TeacherCertificate, @Note);
SELECT TeacherId, TeacherName, TeacherCertificate, Note FROM TeacherDetails WHERE (TeacherId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@TeacherName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TeacherName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TeacherCertificate" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeacherCertificate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Note" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Note" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT TeacherId, TeacherName, TeacherCertificate, Note FROM dbo.TeacherDetails</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[TeacherDetails] SET [TeacherName] = @TeacherName, [TeacherCertificate] = @TeacherCertificate, [Note] = @Note WHERE (([TeacherId] = @Original_TeacherId) AND ((@IsNull_TeacherName = 1 AND [TeacherName] IS NULL) OR ([TeacherName] = @Original_TeacherName)) AND ((@IsNull_TeacherCertificate = 1 AND [TeacherCertificate] IS NULL) OR ([TeacherCertificate] = @Original_TeacherCertificate)) AND ((@IsNull_Note = 1 AND [Note] IS NULL) OR ([Note] = @Original_Note)));
SELECT TeacherId, TeacherName, TeacherCertificate, Note FROM TeacherDetails WHERE (TeacherId = @TeacherId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@TeacherName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TeacherName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TeacherCertificate" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeacherCertificate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Note" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Note" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TeacherId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeacherId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_TeacherName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeacherName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_TeacherName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TeacherName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_TeacherCertificate" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeacherCertificate" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TeacherCertificate" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeacherCertificate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Note" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Note" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Note" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Note" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="TeacherId" ColumnName="TeacherId" DataSourceName="AIProject.dbo.TeacherDetails" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@TeacherId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="TeacherId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TeacherId" DataSetColumn="TeacherId" />
              <Mapping SourceColumn="TeacherName" DataSetColumn="TeacherName" />
              <Mapping SourceColumn="TeacherCertificate" DataSetColumn="TeacherCertificate" />
              <Mapping SourceColumn="Note" DataSetColumn="Note" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="AIProjectDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_DataSetName="AIProjectDataSet" msprop:Generator_UserDSName="AIProjectDataSet" msprop:EnableTableAdapterManager="True">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="ClassArrangement" msprop:Generator_UserTableName="ClassArrangement" msprop:Generator_RowDeletedName="ClassArrangementRowDeleted" msprop:Generator_TableClassName="ClassArrangementDataTable" msprop:Generator_RowChangedName="ClassArrangementRowChanged" msprop:Generator_RowClassName="ClassArrangementRow" msprop:Generator_RowChangingName="ClassArrangementRowChanging" msprop:Generator_RowEvArgName="ClassArrangementRowChangeEvent" msprop:Generator_RowEvHandlerName="ClassArrangementRowChangeEventHandler" msprop:Generator_TablePropName="ClassArrangement" msprop:Generator_TableVarName="tableClassArrangement" msprop:Generator_RowDeletingName="ClassArrangementRowDeleting">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="CustomerId" msprop:Generator_UserColumnName="CustomerId" msprop:Generator_ColumnPropNameInRow="CustomerId" msprop:Generator_ColumnVarNameInTable="columnCustomerId" msprop:Generator_ColumnPropNameInTable="CustomerIdColumn" type="xs:int" />
              <xs:element name="ClassId" msprop:Generator_UserColumnName="ClassId" msprop:Generator_ColumnPropNameInRow="ClassId" msprop:Generator_ColumnVarNameInTable="columnClassId" msprop:Generator_ColumnPropNameInTable="ClassIdColumn" type="xs:int" />
              <xs:element name="CreateDate" msprop:Generator_UserColumnName="CreateDate" msprop:Generator_ColumnPropNameInRow="CreateDate" msprop:Generator_ColumnVarNameInTable="columnCreateDate" msprop:Generator_ColumnPropNameInTable="CreateDateColumn" type="xs:dateTime" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ClassDetails" msprop:Generator_UserTableName="ClassDetails" msprop:Generator_RowDeletedName="ClassDetailsRowDeleted" msprop:Generator_TableClassName="ClassDetailsDataTable" msprop:Generator_RowChangedName="ClassDetailsRowChanged" msprop:Generator_RowClassName="ClassDetailsRow" msprop:Generator_RowChangingName="ClassDetailsRowChanging" msprop:Generator_RowEvArgName="ClassDetailsRowChangeEvent" msprop:Generator_RowEvHandlerName="ClassDetailsRowChangeEventHandler" msprop:Generator_TablePropName="ClassDetails" msprop:Generator_TableVarName="tableClassDetails" msprop:Generator_RowDeletingName="ClassDetailsRowDeleting">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ClassId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="ClassId" msprop:Generator_ColumnPropNameInRow="ClassId" msprop:Generator_ColumnVarNameInTable="columnClassId" msprop:Generator_ColumnPropNameInTable="ClassIdColumn" type="xs:int" />
              <xs:element name="ClassName" msprop:Generator_UserColumnName="ClassName" msprop:Generator_ColumnPropNameInRow="ClassName" msprop:Generator_ColumnVarNameInTable="columnClassName" msprop:Generator_ColumnPropNameInTable="ClassNameColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ClassTime" msprop:Generator_UserColumnName="ClassTime" msprop:Generator_ColumnPropNameInRow="ClassTime" msprop:Generator_ColumnVarNameInTable="columnClassTime" msprop:Generator_ColumnPropNameInTable="ClassTimeColumn" type="xs:int" minOccurs="0" />
              <xs:element name="CourseId" msprop:Generator_UserColumnName="CourseId" msprop:Generator_ColumnPropNameInRow="CourseId" msprop:Generator_ColumnVarNameInTable="columnCourseId" msprop:Generator_ColumnPropNameInTable="CourseIdColumn" type="xs:int" minOccurs="0" />
              <xs:element name="TeacherId" msprop:Generator_UserColumnName="TeacherId" msprop:Generator_ColumnPropNameInRow="TeacherId" msprop:Generator_ColumnVarNameInTable="columnTeacherId" msprop:Generator_ColumnPropNameInTable="TeacherIdColumn" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ClassTime" msprop:Generator_UserTableName="ClassTime" msprop:Generator_RowDeletedName="ClassTimeRowDeleted" msprop:Generator_TableClassName="ClassTimeDataTable" msprop:Generator_RowChangedName="ClassTimeRowChanged" msprop:Generator_RowClassName="ClassTimeRow" msprop:Generator_RowChangingName="ClassTimeRowChanging" msprop:Generator_RowEvArgName="ClassTimeRowChangeEvent" msprop:Generator_RowEvHandlerName="ClassTimeRowChangeEventHandler" msprop:Generator_TablePropName="ClassTime" msprop:Generator_TableVarName="tableClassTime" msprop:Generator_RowDeletingName="ClassTimeRowDeleting">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ClassTimeId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="ClassTimeId" msprop:Generator_ColumnPropNameInRow="ClassTimeId" msprop:Generator_ColumnVarNameInTable="columnClassTimeId" msprop:Generator_ColumnPropNameInTable="ClassTimeIdColumn" type="xs:int" />
              <xs:element name="TimeName" msprop:Generator_UserColumnName="TimeName" msprop:Generator_ColumnPropNameInRow="TimeName" msprop:Generator_ColumnVarNameInTable="columnTimeName" msprop:Generator_ColumnPropNameInTable="TimeNameColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Note" msprop:Generator_UserColumnName="Note" msprop:Generator_ColumnPropNameInRow="Note" msprop:Generator_ColumnVarNameInTable="columnNote" msprop:Generator_ColumnPropNameInTable="NoteColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="1024" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="CourseCertificate" msprop:Generator_UserTableName="CourseCertificate" msprop:Generator_RowDeletedName="CourseCertificateRowDeleted" msprop:Generator_TableClassName="CourseCertificateDataTable" msprop:Generator_RowChangedName="CourseCertificateRowChanged" msprop:Generator_RowClassName="CourseCertificateRow" msprop:Generator_RowChangingName="CourseCertificateRowChanging" msprop:Generator_RowEvArgName="CourseCertificateRowChangeEvent" msprop:Generator_RowEvHandlerName="CourseCertificateRowChangeEventHandler" msprop:Generator_TablePropName="CourseCertificate" msprop:Generator_TableVarName="tableCourseCertificate" msprop:Generator_RowDeletingName="CourseCertificateRowDeleting">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="CertificateId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="CertificateId" msprop:Generator_ColumnPropNameInRow="CertificateId" msprop:Generator_ColumnVarNameInTable="columnCertificateId" msprop:Generator_ColumnPropNameInTable="CertificateIdColumn" type="xs:int" />
              <xs:element name="CertificateName" msprop:Generator_UserColumnName="CertificateName" msprop:Generator_ColumnPropNameInRow="CertificateName" msprop:Generator_ColumnVarNameInTable="columnCertificateName" msprop:Generator_ColumnPropNameInTable="CertificateNameColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Description" msprop:Generator_UserColumnName="Description" msprop:Generator_ColumnPropNameInRow="Description" msprop:Generator_ColumnVarNameInTable="columnDescription" msprop:Generator_ColumnPropNameInTable="DescriptionColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="1024" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="CourseDetails" msprop:Generator_UserTableName="CourseDetails" msprop:Generator_RowDeletedName="CourseDetailsRowDeleted" msprop:Generator_TableClassName="CourseDetailsDataTable" msprop:Generator_RowChangedName="CourseDetailsRowChanged" msprop:Generator_RowClassName="CourseDetailsRow" msprop:Generator_RowChangingName="CourseDetailsRowChanging" msprop:Generator_RowEvArgName="CourseDetailsRowChangeEvent" msprop:Generator_RowEvHandlerName="CourseDetailsRowChangeEventHandler" msprop:Generator_TablePropName="CourseDetails" msprop:Generator_TableVarName="tableCourseDetails" msprop:Generator_RowDeletingName="CourseDetailsRowDeleting">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="CourseId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="CourseId" msprop:Generator_ColumnPropNameInRow="CourseId" msprop:Generator_ColumnVarNameInTable="columnCourseId" msprop:Generator_ColumnPropNameInTable="CourseIdColumn" type="xs:int" />
              <xs:element name="CourseName" msprop:Generator_UserColumnName="CourseName" msprop:Generator_ColumnPropNameInRow="CourseName" msprop:Generator_ColumnVarNameInTable="columnCourseName" msprop:Generator_ColumnPropNameInTable="CourseNameColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CourseCertificate" msprop:Generator_UserColumnName="CourseCertificate" msprop:Generator_ColumnPropNameInRow="CourseCertificate" msprop:Generator_ColumnVarNameInTable="columnCourseCertificate" msprop:Generator_ColumnPropNameInTable="CourseCertificateColumn" type="xs:int" minOccurs="0" />
              <xs:element name="CourseFee" msprop:Generator_UserColumnName="CourseFee" msprop:Generator_ColumnPropNameInRow="CourseFee" msprop:Generator_ColumnVarNameInTable="columnCourseFee" msprop:Generator_ColumnPropNameInTable="CourseFeeColumn" type="xs:double" minOccurs="0" />
              <xs:element name="CourseGroup" msprop:Generator_UserColumnName="CourseGroup" msprop:Generator_ColumnPropNameInRow="CourseGroup" msprop:Generator_ColumnVarNameInTable="columnCourseGroup" msprop:Generator_ColumnPropNameInTable="CourseGroupColumn" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="CourseGroup" msprop:Generator_UserTableName="CourseGroup" msprop:Generator_RowDeletedName="CourseGroupRowDeleted" msprop:Generator_TableClassName="CourseGroupDataTable" msprop:Generator_RowChangedName="CourseGroupRowChanged" msprop:Generator_RowClassName="CourseGroupRow" msprop:Generator_RowChangingName="CourseGroupRowChanging" msprop:Generator_RowEvArgName="CourseGroupRowChangeEvent" msprop:Generator_RowEvHandlerName="CourseGroupRowChangeEventHandler" msprop:Generator_TablePropName="CourseGroup" msprop:Generator_TableVarName="tableCourseGroup" msprop:Generator_RowDeletingName="CourseGroupRowDeleting">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="CourseGroupId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="CourseGroupId" msprop:Generator_ColumnPropNameInRow="CourseGroupId" msprop:Generator_ColumnVarNameInTable="columnCourseGroupId" msprop:Generator_ColumnPropNameInTable="CourseGroupIdColumn" type="xs:int" />
              <xs:element name="Name" msprop:Generator_UserColumnName="Name" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInTable="NameColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Note" msprop:Generator_UserColumnName="Note" msprop:Generator_ColumnPropNameInRow="Note" msprop:Generator_ColumnVarNameInTable="columnNote" msprop:Generator_ColumnPropNameInTable="NoteColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="1024" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="CustomerDetails" msprop:Generator_UserTableName="CustomerDetails" msprop:Generator_RowDeletedName="CustomerDetailsRowDeleted" msprop:Generator_TableClassName="CustomerDetailsDataTable" msprop:Generator_RowChangedName="CustomerDetailsRowChanged" msprop:Generator_RowClassName="CustomerDetailsRow" msprop:Generator_RowChangingName="CustomerDetailsRowChanging" msprop:Generator_RowEvArgName="CustomerDetailsRowChangeEvent" msprop:Generator_RowEvHandlerName="CustomerDetailsRowChangeEventHandler" msprop:Generator_TablePropName="CustomerDetails" msprop:Generator_TableVarName="tableCustomerDetails" msprop:Generator_RowDeletingName="CustomerDetailsRowDeleting">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="CustomerId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="CustomerId" msprop:Generator_ColumnPropNameInRow="CustomerId" msprop:Generator_ColumnVarNameInTable="columnCustomerId" msprop:Generator_ColumnPropNameInTable="CustomerIdColumn" type="xs:int" />
              <xs:element name="Name" msprop:Generator_UserColumnName="Name" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInTable="NameColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Birthday" msprop:Generator_UserColumnName="Birthday" msprop:Generator_ColumnPropNameInRow="Birthday" msprop:Generator_ColumnVarNameInTable="columnBirthday" msprop:Generator_ColumnPropNameInTable="BirthdayColumn" type="xs:dateTime" minOccurs="0" />
              <xs:element name="OccupationTypeId" msprop:Generator_UserColumnName="OccupationTypeId" msprop:Generator_ColumnPropNameInRow="OccupationTypeId" msprop:Generator_ColumnVarNameInTable="columnOccupationTypeId" msprop:Generator_ColumnPropNameInTable="OccupationTypeIdColumn" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="OccupationType" msprop:Generator_UserTableName="OccupationType" msprop:Generator_RowDeletedName="OccupationTypeRowDeleted" msprop:Generator_TableClassName="OccupationTypeDataTable" msprop:Generator_RowChangedName="OccupationTypeRowChanged" msprop:Generator_RowClassName="OccupationTypeRow" msprop:Generator_RowChangingName="OccupationTypeRowChanging" msprop:Generator_RowEvArgName="OccupationTypeRowChangeEvent" msprop:Generator_RowEvHandlerName="OccupationTypeRowChangeEventHandler" msprop:Generator_TablePropName="OccupationType" msprop:Generator_TableVarName="tableOccupationType" msprop:Generator_RowDeletingName="OccupationTypeRowDeleting">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="OccupationTypeId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="OccupationTypeId" msprop:Generator_ColumnPropNameInRow="OccupationTypeId" msprop:Generator_ColumnVarNameInTable="columnOccupationTypeId" msprop:Generator_ColumnPropNameInTable="OccupationTypeIdColumn" type="xs:int" />
              <xs:element name="OccupationName" msprop:Generator_UserColumnName="OccupationName" msprop:Generator_ColumnPropNameInRow="OccupationName" msprop:Generator_ColumnVarNameInTable="columnOccupationName" msprop:Generator_ColumnPropNameInTable="OccupationNameColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Note" msprop:Generator_UserColumnName="Note" msprop:Generator_ColumnPropNameInRow="Note" msprop:Generator_ColumnVarNameInTable="columnNote" msprop:Generator_ColumnPropNameInTable="NoteColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="1024" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TeacherDetails" msprop:Generator_UserTableName="TeacherDetails" msprop:Generator_RowDeletedName="TeacherDetailsRowDeleted" msprop:Generator_TableClassName="TeacherDetailsDataTable" msprop:Generator_RowChangedName="TeacherDetailsRowChanged" msprop:Generator_RowClassName="TeacherDetailsRow" msprop:Generator_RowChangingName="TeacherDetailsRowChanging" msprop:Generator_RowEvArgName="TeacherDetailsRowChangeEvent" msprop:Generator_RowEvHandlerName="TeacherDetailsRowChangeEventHandler" msprop:Generator_TablePropName="TeacherDetails" msprop:Generator_TableVarName="tableTeacherDetails" msprop:Generator_RowDeletingName="TeacherDetailsRowDeleting">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TeacherId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="TeacherId" msprop:Generator_ColumnPropNameInRow="TeacherId" msprop:Generator_ColumnVarNameInTable="columnTeacherId" msprop:Generator_ColumnPropNameInTable="TeacherIdColumn" type="xs:int" />
              <xs:element name="TeacherName" msprop:Generator_UserColumnName="TeacherName" msprop:Generator_ColumnPropNameInRow="TeacherName" msprop:Generator_ColumnVarNameInTable="columnTeacherName" msprop:Generator_ColumnPropNameInTable="TeacherNameColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="TeacherCertificate" msprop:Generator_UserColumnName="TeacherCertificate" msprop:Generator_ColumnPropNameInRow="TeacherCertificate" msprop:Generator_ColumnVarNameInTable="columnTeacherCertificate" msprop:Generator_ColumnPropNameInTable="TeacherCertificateColumn" type="xs:int" minOccurs="0" />
              <xs:element name="Note" msprop:Generator_UserColumnName="Note" msprop:Generator_ColumnPropNameInRow="Note" msprop:Generator_ColumnVarNameInTable="columnNote" msprop:Generator_ColumnPropNameInTable="NoteColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="1024" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ClassArrangement" />
      <xs:field xpath="mstns:CustomerId" />
      <xs:field xpath="mstns:ClassId" />
      <xs:field xpath="mstns:CreateDate" />
    </xs:unique>
    <xs:unique name="ClassDetails_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ClassDetails" />
      <xs:field xpath="mstns:ClassId" />
    </xs:unique>
    <xs:unique name="ClassTime_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ClassTime" />
      <xs:field xpath="mstns:ClassTimeId" />
    </xs:unique>
    <xs:unique name="CourseCertificate_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:CourseCertificate" />
      <xs:field xpath="mstns:CertificateId" />
    </xs:unique>
    <xs:unique name="CourseDetails_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:CourseDetails" />
      <xs:field xpath="mstns:CourseId" />
    </xs:unique>
    <xs:unique name="CourseGroup_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:CourseGroup" />
      <xs:field xpath="mstns:CourseGroupId" />
    </xs:unique>
    <xs:unique name="CustomerDetails_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:CustomerDetails" />
      <xs:field xpath="mstns:CustomerId" />
    </xs:unique>
    <xs:unique name="OccupationType_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:OccupationType" />
      <xs:field xpath="mstns:OccupationTypeId" />
    </xs:unique>
    <xs:unique name="TeacherDetails_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:TeacherDetails" />
      <xs:field xpath="mstns:TeacherId" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_ClassArrangement_ClassDetails" msdata:parent="ClassDetails" msdata:child="ClassArrangement" msdata:parentkey="ClassId" msdata:childkey="ClassId" msprop:Generator_UserRelationName="FK_ClassArrangement_ClassDetails" msprop:Generator_RelationVarName="relationFK_ClassArrangement_ClassDetails" msprop:Generator_UserChildTable="ClassArrangement" msprop:Generator_UserParentTable="ClassDetails" msprop:Generator_ParentPropName="ClassDetailsRow" msprop:Generator_ChildPropName="GetClassArrangementRows" />
      <msdata:Relationship name="FK_ClassArrangement_CustomerDetails" msdata:parent="CustomerDetails" msdata:child="ClassArrangement" msdata:parentkey="CustomerId" msdata:childkey="CustomerId" msprop:Generator_UserRelationName="FK_ClassArrangement_CustomerDetails" msprop:Generator_RelationVarName="relationFK_ClassArrangement_CustomerDetails" msprop:Generator_UserChildTable="ClassArrangement" msprop:Generator_UserParentTable="CustomerDetails" msprop:Generator_ParentPropName="CustomerDetailsRow" msprop:Generator_ChildPropName="GetClassArrangementRows" />
      <msdata:Relationship name="FK_ClassDetails_ClassTime" msdata:parent="ClassTime" msdata:child="ClassDetails" msdata:parentkey="ClassTimeId" msdata:childkey="ClassTime" msprop:Generator_UserRelationName="FK_ClassDetails_ClassTime" msprop:Generator_RelationVarName="relationFK_ClassDetails_ClassTime" msprop:Generator_UserChildTable="ClassDetails" msprop:Generator_UserParentTable="ClassTime" msprop:Generator_ParentPropName="ClassTimeRow" msprop:Generator_ChildPropName="GetClassDetailsRows" />
      <msdata:Relationship name="FK_ClassDetails_CourseDetails" msdata:parent="CourseDetails" msdata:child="ClassDetails" msdata:parentkey="CourseId" msdata:childkey="CourseId" msprop:Generator_UserRelationName="FK_ClassDetails_CourseDetails" msprop:Generator_RelationVarName="relationFK_ClassDetails_CourseDetails" msprop:Generator_UserChildTable="ClassDetails" msprop:Generator_UserParentTable="CourseDetails" msprop:Generator_ParentPropName="CourseDetailsRow" msprop:Generator_ChildPropName="GetClassDetailsRows" />
      <msdata:Relationship name="FK_ClassDetails_TeacherDetails" msdata:parent="TeacherDetails" msdata:child="ClassDetails" msdata:parentkey="TeacherId" msdata:childkey="TeacherId" msprop:Generator_UserRelationName="FK_ClassDetails_TeacherDetails" msprop:Generator_RelationVarName="relationFK_ClassDetails_TeacherDetails" msprop:Generator_UserChildTable="ClassDetails" msprop:Generator_UserParentTable="TeacherDetails" msprop:Generator_ParentPropName="TeacherDetailsRow" msprop:Generator_ChildPropName="GetClassDetailsRows" />
      <msdata:Relationship name="FK_CourseDetails_CourseCertificate" msdata:parent="CourseCertificate" msdata:child="CourseDetails" msdata:parentkey="CertificateId" msdata:childkey="CourseCertificate" msprop:Generator_UserRelationName="FK_CourseDetails_CourseCertificate" msprop:Generator_RelationVarName="relationFK_CourseDetails_CourseCertificate" msprop:Generator_UserChildTable="CourseDetails" msprop:Generator_UserParentTable="CourseCertificate" msprop:Generator_ParentPropName="CourseCertificateRow" msprop:Generator_ChildPropName="GetCourseDetailsRows" />
      <msdata:Relationship name="FK_CourseDetails_CourseGroup" msdata:parent="CourseGroup" msdata:child="CourseDetails" msdata:parentkey="CourseGroupId" msdata:childkey="CourseGroup" msprop:Generator_UserRelationName="FK_CourseDetails_CourseGroup" msprop:Generator_RelationVarName="relationFK_CourseDetails_CourseGroup" msprop:Generator_UserChildTable="CourseDetails" msprop:Generator_UserParentTable="CourseGroup" msprop:Generator_ParentPropName="CourseGroupRow" msprop:Generator_ChildPropName="GetCourseDetailsRows" />
      <msdata:Relationship name="FK_CustomerDetails_OccupationType" msdata:parent="OccupationType" msdata:child="CustomerDetails" msdata:parentkey="OccupationTypeId" msdata:childkey="OccupationTypeId" msprop:Generator_UserRelationName="FK_CustomerDetails_OccupationType" msprop:Generator_RelationVarName="relationFK_CustomerDetails_OccupationType" msprop:Generator_UserChildTable="CustomerDetails" msprop:Generator_UserParentTable="OccupationType" msprop:Generator_ParentPropName="OccupationTypeRow" msprop:Generator_ChildPropName="GetCustomerDetailsRows" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>